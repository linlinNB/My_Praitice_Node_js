let fs = require('fs');
/**
 * 操作系统中文件的硬链接：
 *  1.硬链接（hard link）,就是一个文件的一个或者多个文件名称。链接的本质就是吧文件名和计算机文件系统使用的节点连接起来。
 *          本质就是：一个索引节点（index_node）对应多个文件名，也就是一个元数据（meta data）对应多组用户数据（user block）
 *    硬链接的特点在于：
 *      （1）不同于一般的快捷方式，它是NTFS文件特有的属性
 *      （2）硬链接与被链接文件相互绑定，互相影响，无论二者哪一个文件修改，都会影响其他的硬链接文件
 *      对于硬链接来，适用于在同一个卷的文件级别，不许可给目录创建硬链接
 *      对于硬链接来说，不支持跨卷，只有在同一文件系统中的文件之间才能够创建链接
 *
 *
 *
 * 硬链接的优势：
 *  1.节省硬盘空间。 同样的文件，只需要系统维护相关的硬链接关系，不要对文件本身进行多重拷贝，足够节省硬盘空间 *
 *  2.重命名文件。在windows系统中，对于文件的重命名操作本质上就是修改目录项的本身就可以，硬链接不会发生变动
 *  3.删除文件。删除文件的时候，只需要把相应的目录项删除即可，本体文件的硬链接数目-1.如果删除目录项后改文件的链接数
 *    为0，那么系统会把真正的文件从硬盘中删除。
 *
 * 硬链接的劣势：
 *  1.不能对于文件夹进行硬链接设计
 *
 *
 */

{
    fs.link('./test.txt', './test_link.txt', (error) => {
        if (error) {
            console.log('创建硬链接失败')
        } else {
            console.log('创建硬链接成功')
        }
    })
}
/*
//删除文件硬链接
{
    fs.unlink('./test_link', (error) => {
        if (error) {
            console.log('删除文件硬链接失败')
        } else {
            console.log('删除文件硬链接成功')
        }
    })
}*/
